[{"title":"关于移动端适配","date":"2017-02-28T15:42:10.000Z","path":"2017/02/28/关于移动端适配/","text":"设备的像素比(device pixel ratio)简称DPR1.物理像素(physical pixel)我们看到的每个屏幕都是由一颗颗我们肉眼难以看到的小颗粒（物理像素）组成的。 2.逻辑像素是计算机坐标系统中的一个点，这个点代表一个可以由程序使用的虚拟像素(比如说CSS像素)。 DPR = 物理像素 / 逻辑像素 方法:利用js计算当前设备的DPR，动态设置在html标签上，并动态设置html的font-size，利用css的选择器根据DPR来设置不同DPR下的字体大小-&gt;下面贴代码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155!function(win, lib) &#123;var timer, doc = win.document, docElem = doc.documentElement, vpMeta = doc.querySelector('meta[name=\"viewport\"]'), flexMeta = doc.querySelector('meta[name=\"flexible\"]'), dpr = 0, scale = 0, flexible = lib.flexible || (lib.flexible = &#123;&#125;);// 设置了 viewport metaif (vpMeta) &#123; console.warn(\"将根据已有的meta标签来设置缩放比例\"); var initial = vpMeta.getAttribute(\"content\").match(/initial\\-scale=([\\d\\.]+)/); if (initial) &#123; scale = parseFloat(initial[1]); // 已设置的 initialScale dpr = parseInt(1 / scale); // 设备像素比 devicePixelRatio &#125;&#125;// 设置了 flexible Metaelse if (flexMeta) &#123; var flexMetaContent = flexMeta.getAttribute(\"content\"); if (flexMetaContent) &#123; var initial = flexMetaContent.match(/initial\\-dpr=([\\d\\.]+)/), maximum = flexMetaContent.match(/maximum\\-dpr=([\\d\\.]+)/); if (initial) &#123; dpr = parseFloat(initial[1]); scale = parseFloat((1 / dpr).toFixed(2)); &#125; if (maximum) &#123; dpr = parseFloat(maximum[1]); scale = parseFloat((1 / dpr).toFixed(2)); &#125; &#125;&#125;// viewport 或 flexible// meta 均未设置if (!dpr &amp;&amp; !scale) &#123; // QST // 这里的 第一句有什么用 ? // 和 Android 有毛关系 ? var u = (win.navigator.appVersion.match(/android/gi), win.navigator.appVersion.match(/iphone/gi)), _dpr = win.devicePixelRatio; // 所以这里似乎是将所有 Android 设备都设置为 1 了 dpr = u ? ( (_dpr &gt;= 3 &amp;&amp; (!dpr || dpr &gt;= 3)) ? 3 : (_dpr &gt;= 2 &amp;&amp; (!dpr || dpr &gt;= 2)) ? 2 : 1 ) : 1; scale = 1 / dpr;&#125;docElem.setAttribute(\"data-dpr\", dpr);// 插入 viewport metaif (!vpMeta) &#123; vpMeta = doc.createElement(\"meta\"); vpMeta.setAttribute(\"name\", \"viewport\"); vpMeta.setAttribute(\"content\", \"initial-scale=\" + scale + \", maximum-scale=\" + scale + \", minimum-scale=\" + scale + \", user-scalable=no\"); if (docElem.firstElementChild) &#123; docElem.firstElementChild.appendChild(vpMeta) &#125; else &#123; var div = doc.createElement(\"div\"); div.appendChild(vpMeta); doc.write(div.innerHTML); &#125;&#125;function setFontSize() &#123; var winWidth = docElem.getBoundingClientRect().width; if (winWidth / dpr &gt; 540) &#123; (winWidth = 540 * dpr); &#125; // 根节点 fontSize 根据宽度决定 var baseSize = winWidth / 10; docElem.style.fontSize = baseSize + \"px\"; flexible.rem = win.rem = baseSize;&#125;// 调整窗口时重置win.addEventListener(\"resize\", function() &#123; clearTimeout(timer); timer = setTimeout(setFontSize, 300);&#125;, false); // 这一段是我自己加的// orientationchange 时也需要重算下吧win.addEventListener(\"orientationchange\", function() &#123; clearTimeout(timer); timer = setTimeout(setFontSize, 300);&#125;, false);// pageshow// keyword: 倒退 缓存相关win.addEventListener(\"pageshow\", function(e) &#123; if (e.persisted) &#123; clearTimeout(timer); timer = setTimeout(setFontSize, 300); &#125;&#125;, false);// 设置基准字体if (\"complete\" === doc.readyState) &#123; doc.body.style.fontSize = 12 * dpr + \"px\";&#125; else &#123; doc.addEventListener(\"DOMContentLoaded\", function() &#123; doc.body.style.fontSize = 12 * dpr + \"px\"; &#125;, false);&#125;setFontSize();flexible.dpr = win.dpr = dpr;flexible.refreshRem = setFontSize;flexible.rem2px = function(d) &#123; var c = parseFloat(d) * this.rem; if (\"string\" == typeof d &amp;&amp; d.match(/rem$/)) &#123; c += \"px\"; &#125; return c;&#125;;flexible.px2rem = function(d) &#123; var c = parseFloat(d) / this.rem; if (\"string\" == typeof d &amp;&amp; d.match(/px$/)) &#123; c += \"rem\"; &#125; return c;&#125;&#125;(window, window.lib || (window.lib = &#123;&#125;)); 今天自己写适配的时候,把头文件大概都看了一下 最后，由于本人还是前端路上的小菜鸟，见识有限，才疏学浅，有表述错误的地方，还请指正，以上。 附参考资料：淘宝移动端适配方案","tags":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://oohyo.github.io/tags/学习笔记/"}]},{"title":"皮皮虾,我们走","date":"2017-02-27T15:34:37.000Z","path":"2017/02/27/皮皮虾-我们走/","text":"曾经的多肉 黄金万年草 小黄花-照波 红宝石 吉娃娃 小雪莲 姬玉露 观音莲 桃蛋 白熊童子 收获在这半年里,学会了很多关于养护植物的知识,觉得这些小植物也挺有意思的,虽然跑来跑去拿快递有点麻烦… 邮件(zgc7788#gmail.com, 把#换成@) QQ: 839153198 weibo: @er_567","tags":[{"name":"随笔","slug":"随笔","permalink":"https://oohyo.github.io/tags/随笔/"}]},{"title":"Hello World","date":"2017-02-27T09:03:34.186Z","path":"2017/02/27/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]